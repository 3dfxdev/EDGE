language: c++
dist: trusty

branches:
  except:
    - /^appveyor.*$/

git:
  depth: 10

matrix:
  include:
    - os: linux
      compiler: gcc
      env:
        - GCC_VERSION=4.9
        - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - libsdl2-dev
            - libphysfs-dev
            - libsdl2-net-dev
            - libglew-dev
            - libpng++-dev
            - libogg-dev
            - libvorbis-dev
            - libghc-zlib-dev
            - cpuid
            - libjpeg-turbo8-dev

    - os: linux
      compiler: gcc
      env:
        - GCC_VERSION=7
        - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libsdl2-dev
            - libphysfs-dev
            - libsdl2-net-dev
            - libglew-dev
            - libpng++-dev
            - libogg-dev
            - libvorbis-dev
            - libghc-zlib-dev
            - cpuid
            - libjpeg-turbo8-dev

    - os: linux
      compiler: clang
      env:
        - CLANG_VERSION=5.0
        - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=MinSizeRel -DDYN_OPENAL=NO -DDYN_SNDFILE=NO -DDYN_MPG123=NO -DDYN_FLUIDSYNTH=NO"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libstdc++-5-dev
            - libsdl2-dev
            - libgme-dev
            - libopenal-dev
            - libmpg123-dev
            - libsndfile-dev
            - libfluidsynth-dev
            - libgtk-3-dev
            - libphysfs-dev
            - libsdl2-net-dev
            - libglew-dev
            - libpng++-dev
            - libogg-dev
            - libvorbis-dev
            - libghc-zlib-dev
            - cpuid
            - libjpeg-turbo8-dev

before_install:
  - if [ -n "$GCC_VERSION" ]; then export CC="gcc-${GCC_VERSION}" CXX="g++-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CC="clang-${CLANG_VERSION}" CXX="clang++-${CLANG_VERSION}"; fi
  - $CC --version
  - $CXX --version

script:
  - echo ${TRAVIS_BUILD_DIR}
  - mkdir build
  - cd build
  - cmake ${CMAKE_OPTIONS} ..
  - make -j2

notifications:
  email: false
