#
# Makefile for EDGE/MacOSX
#
# (Note: requires GNU make)
#
# Note 2: Only tested under a Fink enviroment (see http://fink.sf.net)

# --- variables that can be overridden ---

# compiler
CC=g++

# assembler (for the .asm files)
AS=nasm -f elf

# optimisation
#OPTIM=-O3
#OPTIM=-g3
OPTIM=-O

# Video options: SDL SDLGL
VIDEO=SDLGL

# Sound options: SDL
SOUND=SDL

# Assembly options: N Y
ASSEM=N

DEBUG=1
#PROFILE=1
#RELEASE=1

# --- internal stuff from here on ---

LX_DIR=linux
EPI_DIR=epi
SDL_DIR=SDL
LZO_DIR=lzo
GLBSP_DIR=glbsp-2.05
JPEG_DIR=libjpeg
PNG_DIR=libpng

V_SDL_NAME=edge
V_SDL_FLAGS=$(shell sdl-config --cflags)
V_SDL_LDFLAGS=-L/usr/X11R6/lib
V_SDL_OBJS=$(SDL_DIR)/i_video.o
V_SDL_LIBS=$(shell sdl-config --libs)

V_SDLGL_NAME=gledge
V_SDLGL_FLAGS=$(shell sdl-config --cflags) -DUSE_GL
V_SDLGL_LDFLAGS=-L/usr/X11R6/lib
V_SDLGL_OBJS=$(SDL_DIR)/i_video.o
V_SDLGL_LIBS=$(shell sdl-config --libs) -lGL

S_SDL_FLAGS=
S_SDL_LDFLAGS=
S_SDL_OBJS=$(LX_DIR)/is_sdl.o
S_SDL_LIBS=

ASM_N_DIR=noasm
ASM_N_FLAGS=
ASM_N_OBJS=$(ASM_NULL_OBJS)

ASM_Y_DIR=i386
ASM_Y_FLAGS=-DASM_NEED_UNDERSCORES
ASM_Y_OBJS=$(ASM_I386_OBJS)

# --- putting it all together ---

PROGNAME=$(V_$(VIDEO)_NAME)

ASM_DIR=$(ASM_$(ASSEM)_DIR)

CPPFLAGS=-I$(LX_DIR) -I.

CFLAGS=-Wall $(OPTIM) -DMACOSX -DDEVELOPERS  -D__BIG_ENDIAN__  \
       $(ASM_$(ASSEM)_FLAGS) $(V_$(VIDEO)_FLAGS)  \
       $(S_$(SOUND)_FLAGS)

CXXFLAGS=-Wall $(OPTIM) -DMACOSX -DDEVELOPERS  -D__BIG_ENDIAN__ \
       $(ASM_$(ASSEM)_FLAGS) $(V_$(VIDEO)_FLAGS)  \
       $(S_$(SOUND)_FLAGS)

LDFLAGS=$(V_$(VIDEO)_LDFLAGS)  \
        $(S_$(SOUND)_LDFLAGS)

LIBS=-lm  \
	$(EPI_DIR)/libepi.a $(LZO_DIR)/liblzo.a \
	$(GLBSP_DIR)/plugin/libglbsp.a  \
	$(V_$(VIDEO)_LIBS) $(S_$(SOUND)_LIBS)

# ----- OBJECTS --------------------------------------------------------

OBJS=$(SYSTEM_OBJS) $(SDL_OBJS) $(ASM_$(ASSEM)_OBJS)  \
     $(V_$(VIDEO)_OBJS) $(S_$(SOUND)_OBJS) $(COMMON_OBJS)

##   $(PNG_OBJS) $(JPEG_OBJS)

SDL_OBJS= \
		$(SDL_DIR)/i_ctrl.o  \
        $(SDL_DIR)/i_cd.o    $(SDL_DIR)/i_net.o
 
SYSTEM_OBJS= \
        $(LX_DIR)/i_main.o   $(LX_DIR)/i_music.o  \
        $(LX_DIR)/i_compen.o $(LX_DIR)/i_system.o \
        $(LX_DIR)/i_mussrv.o $(LX_DIR)/i_fmpat.o

COMMON_OBJS= \
        am_map.o con_main.o   \
        con_cvar.o con_con.o  \
		ddf_parser.o \
        ddf_anim.o ddf_atk.o  \
        ddf_boom.o ddf_colm.o \
        ddf_game.o ddf_lang.o \
        ddf_levl.o ddf_line.o \
        ddf_main.o ddf_mobj.o \
        ddf_mus.o  ddf_stat.o \
        ddf_sect.o ddf_sfx.o  \
        ddf_swth.o ddf_weap.o \
        dm_defs.o  dm_state.o \
        e_main.o e_net.o      \
        f_finale.o g_game.o   \
        gui_main.o gui_ctls.o \
        hu_lib.o hu_stuff.o   \
        lu_math.o  lu_gamma.o \
        l_mp3.o    l_glbsp.o  \
        m_argv.o   m_random.o \
        m_bbox.o m_cheat.o    \
        m_fixed.o m_menu.o    \
        m_misc.o m_option.o   \
        m_math.o m_crc32.o    \
        p_action.o p_enemy.o \
        p_inter.o p_lights.o \
        p_map.o   p_maputl.o \
        p_bot.o   p_mobj.o   \
        p_plane.o p_weapon.o \
        p_setup.o p_sight.o  \
        p_spec.o p_switch.o  \
        p_tick.o p_user.o    \
        r_bsp.o r_data.o     \
        r_draw1.o r_draw2.o  \
        r_main.o r_plane.o   \
        r_segs.o r_layers.o  \
        r_sky.o  r_things.o  \
        r_view.o r_vbinit.o  \
        r2_bsp.o r2_draw.o   \
        r2_util.o  \
        rgl_bsp.o rgl_main.o \
        rgl_sky.o rgl_unit.o \
        rgl_wipe.o \
        rad_act.o rad_pars.o  \
        rad_trig.o sv_chunk.o \
        sv_dump.o  sv_glob.o  \
        sv_main.o  sv_mobj.o  \
        sv_load.o  sv_save.o  \
        sv_level.o sv_misc.o  \
        sv_play.o  \
        s_sound.o s_music.o   \
        st_lib.o  st_stuff.o  \
        v_func.o  v_screen.o  \
        v_res.o v_colour.o    \
        v_video1.o v_video2.o \
        v_toplev.o w_image.o  \
        w_wad.o wi_stuff.o    \
        wp_main.o wp_wipe.o   \
        w_textur.o z_zone.o


ASM_NULL_OBJS= \
        noasm/i_asm.o 

ASM_I386_OBJS= \
        i386/i_asm.o    i386/i_cpu.o    \
        i386/r_column.o i386/r_resize.o \
        i386/r_span.o

# ----- RULES --------------------------------------------------------

%.o: %.asm
	$(AS) $< -o $@

# ----- TARGETS ------------------------------------------------------

EDGELIBS = epi glbsp lzo

all: $(EDGELIBS) $(PROGNAME)

clean:
	rm -f $(PROGNAME) core *.o \
	    $(LX_DIR)/*.o $(SDL_DIR)/*.o $(EPI_DIR)/*.o $(ASM_DIR)/*.o \
		$(EPI_DIR)/libepi.a $(LZO_DIR)/liblzo.a

epi lzo:
	$(MAKE) -C $@ -f Makefile.osx

glbsp:
	$(MAKE) -C $(GLBSP_DIR)/plugin -f makefile.osx

renderclean:
	rm -f $(PROGNAME) r*.o

$(PROGNAME): $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) -o $(PROGNAME) $(LIBS)

.PHONY: all clean $(EDGELIBS) renderclean

# ----- RELEASES --------------------------------------------

BIN_FILES=djgpp/edge.* win32/[eE]dge.*

SRC_FILES=*.[ch] djgpp/*.[ch] djgpp/*.bat win32/*.[ch] win32/*.bat  \
          win32/Debug win32/Release win32/*.bcc win32/edge32.r*  \
          linux/*.[ch]  linux/Makefile linux/README null/*.[ch]  \
          noasm/*.[ch] i386/*.[ch]  djgpp/Makefile  README  \
          i386/*.asm contrib/* docs/* log/*  \
          djgpp/obj djgpp/obj/i386 win32/obj  \
          lzo/COPYING lzo/README* lzo/*.[ch]

tar:
	cd ../..; make -f edge/linux/Makefile do_good_tarball

zip:
	cd ..; make -f linux/Makefile do_zipball

do_tarball:
	rm -f /tmp/edge.zip
	-zip -0 /tmp/edge.zip $(BIN_FILES)
	zip -0 -l /tmp/edge.zip $(SRC_FILES)
	mkdir /tmp/edge_temp
	cd /tmp/edge_temp; unzip /tmp/edge.zip
	cd /tmp/edge_temp; tar cf /tmp/edge.tar .
	bzip2 /tmp/edge.tar

do_good_tarball:
	rm -f /tmp/edge.tgz
	tar czf /tmp/edge.tgz  \
        $(patsubst %,edge/%,$(BIN_FILES) $(SRC_FILES))

do_zipball:
	rm -f /tmp/edge.zip
	-zip /tmp/edge.zip $(BIN_FILES)
	zip -l /tmp/edge.zip $(SRC_FILES)

.PHONY: tarball do_tarball do_good_tarball zipball do_zipball
